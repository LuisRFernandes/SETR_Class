ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0xa7d
  Start of program headers:          52 (bytes into file)
  Start of section headers:          854088 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         5
  Size of section headers:           40 (bytes)
  Number of section headers:         28
  Section header string table index: 27

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] rom_start         PROGBITS        00000000 0000e0 000100 00 WAX  0   0  4
  [ 2] text              PROGBITS        00000100 0001e0 0051c8 00  AX  0   0  4
  [ 3] initlevel         PROGBITS        000052c8 0053a8 000060 00   A  0   0  4
  [ 4] device_area       PROGBITS        00005328 005408 000050 00   A  0   0  4
  [ 5] sw_isr_table      PROGBITS        00005378 005458 000180 00  WA  0   0  4
  [ 6] tbss              NOBITS          000054f8 0055d8 000004 00 WAT  0   0  4
  [ 7] rodata            PROGBITS        00005500 0055e0 0003f0 00   A  0   0 16
  [ 8] .ramfunc          PROGBITS        20000000 005b6c 000000 00   W  0   0  1
  [ 9] datas             PROGBITS        20000000 0059d0 000140 00  WA  0   0  4
  [10] device_states     PROGBITS        20000140 005b10 000008 00  WA  0   0  1
  [11] k_mutex_area      PROGBITS        20000148 005b18 000050 00  WA  0   0  4
  [12] bss               NOBITS          20000198 005b98 000e21 00  WA  0   0  8
  [13] noinit            NOBITS          20000fc0 005b98 000e00 00  WA  0   0 64
  [14] .comment          PROGBITS        00000000 005b6c 000040 01  MS  0   0  1
  [15] .debug_aranges    PROGBITS        00000000 005bb0 0016b8 00      0   0  8
  [16] .debug_info       PROGBITS        00000000 007268 061a5d 00      0   0  1
  [17] .debug_abbrev     PROGBITS        00000000 068cc5 00c162 00      0   0  1
  [18] .debug_line       PROGBITS        00000000 074e27 01cae8 00      0   0  1
  [19] .debug_frame      PROGBITS        00000000 091910 003368 00      0   0  4
  [20] .debug_str        PROGBITS        00000000 094c78 00c2c4 01  MS  0   0  1
  [21] .debug_loc        PROGBITS        00000000 0a0f3c 01d3c6 00      0   0  1
  [22] .debug_ranges     PROGBITS        00000000 0be308 005088 00      0   0  8
  [23] .ARM.attributes   ARM_ATTRIBUTES  00000000 0c3390 000032 00      0   0  1
  [24] .last_section     PROGBITS        00005a88 005b68 000004 00   A  0   0  1
  [25] .symtab           SYMTAB          00000000 0c33c4 0071b0 10     26 990  4
  [26] .strtab           STRTAB          00000000 0ca574 0061bb 00      0   0  1
  [27] .shstrtab         STRTAB          00000000 0d072f 000117 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  LOAD           0x0000e0 0x00000000 0x00000000 0x058f0 0x058f0 RWE 0x10
  LOAD           0x0059d0 0x20000000 0x000058f0 0x00198 0x00198 RW  0x4
  LOAD           0x005b68 0x00005a88 0x00005a88 0x00004 0x00004 R   0x1
  LOAD           0x000000 0x20000198 0x20000198 0x00000 0x01c28 RW  0x40
  TLS            0x0055d8 0x000054f8 0x000054f8 0x00000 0x00004 R   0x4

 Section to Segment mapping:
  Segment Sections...
   00     rom_start text initlevel device_area sw_isr_table rodata 
   01     datas device_states k_mutex_area 
   02     .last_section 
   03     bss noinit 
   04     tbss 
